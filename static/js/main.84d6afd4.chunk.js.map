{"version":3,"sources":["img/slider1.jpeg","img/slider.jpeg","img/slider3.jpeg","img/slider2.jpeg","firebase/config.js","hooks/useFirestore.js","comps/Layout.js","comps/GridImage.js","comps/Title.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/Slider/SliderElements.js","comps/Slider/Index.js","comps/Modal.js","App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","Layout","props","Container","children","GridImage","SetSelectedImage","className","Row","map","Col","xs","md","key","onClick","url","src","alt","Title","handleScroll","window","scrollY","document","querySelector","style","background","boxShadow","addEventListener","removeEventListener","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","type","class","onChange","e","selected","target","files","includes","for","styled","div","theme","secundary_color","Slider","Carousel","Item","interval","maxWidth","maxHeight","slider","minHeight","objectFit","Caption","top","transform","bottom","slider1","slider3","Modal","selectedImage","classList","contains","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84d6afd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slider1.43386b31.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/slider.fc568e75.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/slider3.6e4db0ef.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/slider2.750df821.jpeg\";","\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/storage\"\r\nimport \"firebase/firestore\"\r\n\r\n\r\n  // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyA9KDwjrne0dSuvqRX87HuSjsEKe9N2LdE\",\r\n    authDomain: \"gallery-website-d9cd5.firebaseapp.com\",\r\n    projectId: \"gallery-website-d9cd5\",\r\n    storageBucket: \"gallery-website-d9cd5.appspot.com\",\r\n    messagingSenderId: \"506563991016\",\r\n    appId: \"1:506563991016:web:706f65ca60bc180d1b005d\",\r\n    measurementId: \"G-FFEWBHX7DC\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export {projectStorage, projectFirestore, timeStamp}\r\n  ","import { useState, useEffect } from \"react\"\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\n const useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]); //armazena os arquivos da coleção (tabela)\r\n\r\n    useEffect(() => {\r\n\r\n        const unsub = projectFirestore.collection(collection) \r\n            .orderBy('createdAt', 'desc') //ordena por timestamp \r\n            .onSnapshot((snap) => { //executa sempre quando houver uma mudança na coleção (atualizaçaõ em tempo real)\r\n                let documents = []; // armazena os documentos\r\n                snap.forEach(doc => { // verifica todos os documentos, separadamente (doc)\r\n                    documents.push({...doc.data(), id: doc.id}) //armazena no array, todas as informações do documento + id\r\n                });\r\n                setDocs(documents) //armazena os arquivos da coleção (tabela)\r\n            })\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, [collection]);\r\n\r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react'\r\nimport {Container} from 'react-bootstrap'\r\n\r\nexport const Layout = (props) => {\r\n    return (\r\n        <Container>\r\n            {props.children}\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport useFirestore from \"../hooks/useFirestore\"\r\nimport { Layout } from \"./Layout\"\r\nimport { Row, Col } from \"react-bootstrap\"\r\nimport { Modal } from 'bootstrap'\r\n\r\nexport const GridImage = ({ SetSelectedImage }) => {\r\n    const { docs } = useFirestore('images') //passa o nome da coleção (tabela) e recebe o que está sendo retornado, no caso os documentos\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"img-grid\">\r\n                <Row>\r\n                    {docs && docs.map(doc => (\r\n                        <Col xs={12} md={4}>\r\n                            <div className=\"img-wrap\" key={doc.id}\r\n                                onClick={()=>{\r\n                                    SetSelectedImage(doc.url)}\r\n                                }>\r\n\r\n                                <img src={doc.url} alt=\"uploaded imagem\" />\r\n                            </div>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\n\nconst Title = () => {\n\n  useEffect(() => {\n    const handleScroll = () => {\n\n       let  show = window.scrollY > 0\n\n        if (show) {\n            document.querySelector(\".title\").style.background = \"#E32B2B\";\n            document.querySelector(\".title\").style.boxShadow = \"1px 2px 1px #ffffff\";\n\n        } else {\n            document.querySelector(\".title\").style.background = \"transparent\";\n            document.querySelector(\".title\").style.boxShadow = \"none\";\n\n        }\n    }\n    document.addEventListener('scroll', handleScroll)\n    return () => {\n        document.removeEventListener('scroll', handleScroll)\n    }\n}, [])\n// nav transparente quando no topo\n\n  return (\n    <div className=\"title\">\n      <h1>Seu Álbum Pessoal</h1>\n    </div>\n  )\n}\n\nexport default Title;","import { useState, useEffect } from 'react'\r\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase/config' // armazena as imagens\r\n\r\nconst useStorage = (file) => { // recebendo o arquivo, quando selecionado no input\r\n\r\n    const [progress, setProgress] = useState(0); // salva o progresso do upload\r\n    const [error, setError] = useState(null); // armazena o erro\r\n    const [url, setUrl] = useState(null); // armazena a url da imagem quando feita o upload\r\n\r\n    useEffect(() => { // sempre que houve um novo arquivo (file - change) executa useEffect\r\n\r\n        //referencia (url) onde as imagens serão salvas\r\n\r\n        const storageRef = projectStorage.ref(file.name); // criando a localizacao (referencia) especifica do arquivo\r\n        const collectionRef = projectFirestore.collection('images')\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => { // inicia o upload do arquivo referenciado, passando o (snap) no caso as informações do que está acontecendo naquele exato momento do upload\r\n\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100; // cálculo para porcentagem do progresso do upload\r\n            setProgress(percentage); // armazena o progresso\r\n\r\n        }, (err) => { // caso acha erro\r\n\r\n            setError(err) // armazena o erro\r\n\r\n        }, async()=>{ // caso não acha (upload completo)\r\n\r\n            const url = await storageRef.getDownloadURL(); // faz o download do arquivo referenciado\r\n            const createdAt = timeStamp(); // armazena o tempo - (horário do upload)\r\n            collectionRef.add({url, createdAt}); // cria um novo documento para essa coleção (tabela) relaciona todo arquivo a uma \"tabela\", armazenando o url e o tempo que foi feito o upload (createdAt)\r\n            setUrl(url); // armazena no estado (url)\r\n        })\r\n\r\n    }, [file]); // sempre que o input mudar - executa\r\n\r\n    return {progress, url, error} // retorna o progresso do upload, a url - (arquivo baixado), e o erro caso acha\r\n\r\n}\r\n\r\nexport default useStorage; // exporta","import React, {useEffect} from 'react'\r\nimport useStorage from \"../hooks/useStorage\"\r\n\r\nexport const ProgressBar = ({file, setFile}) => {\r\n\r\n    const {url, progress} = useStorage(file); // useStorage(file) - passando o arquivo e do return armazeno apenas o url e o progress\r\n\r\n    useEffect(() => {\r\n        if(url){\r\n            setFile(null)\r\n        } \r\n    }, [url]);\r\n    \r\n    return (\r\n        <div className=\"progress-bar\" style={{width: progress + \"%\"}}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { ProgressBar } from \"./ProgressBar\"\r\n\r\nexport const UploadForm = () => {\r\n\r\n    const [file, setFile] = useState(null); // estado - controla se foi selecionado algum arquivo no upload.\r\n    const types = [\"image/png\", \"image/jpeg\", \"image/jpg\"]; // tipos de arquivos aceitos\r\n    const [error, setError] = useState(null); // lida com erros\r\n\r\n\r\n    const changeHandler = (e) => { // sempre quando for selecionado algum arquivo\r\n\r\n        let selected = e.target.files[0]; // armazena na variavél\r\n\r\n        if (selected && types.includes(selected.type)) { //se houver arquivo selecionado e o tipo adequado\r\n\r\n            setFile(selected); //armazena o arquivo no estado.\r\n            setError(\"\"); // sem erro.\r\n\r\n        } else {\r\n\r\n            setFile(null); //caso não tenha sido selecionado o arquivo ou o arquivo tem o tipo não aceito\r\n            setError(\"Selecione uma imagem (png ou jpeg)\") // ataualiza a mensagem de erro\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n\r\n            <input type=\"file\" name=\"btn-upload\" class=\"hide\" id=\"btn-uploadID\" onChange={changeHandler}/>\r\n            <label for=\"btn-uploadID\" class=\"btn-upload\">Selecione a Imagem</label>\r\n\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{error}</div>}          {/* caso acha erro, executa {error}*/}                       {/* caso acha arquivo, executa {file.name}*/}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}   {/* caso acha arquivo, executa o component de progresso, passando o arquivo ou seja (getFile, setFile)*/}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nexport const Container = styled.div`\r\n    width: 100%;\r\n    position: relative;\r\n    top: 0;\r\n    margin-bottom: 0px;\r\n\r\n    .slider{\r\n        .itemSlider{\r\n            .item:after {\r\n                content:\"\";\r\n                position:absolute;\r\n                top:0;\r\n                bottom:0;\r\n                left:0;\r\n                right:0;\r\n                background:rgba(0,0,0,0.4);\r\n                }\r\n\r\n            .item>img{\r\n                animation: zoom 20s;\r\n\r\n                @keyframes zoom{\r\n                    0%{\r\n                        transform: scale(1);\r\n                    }   \r\n                    100%{\r\n                        transform: scale(1.2);\r\n                    }\r\n                }\r\n            }\r\n        \r\n            .info-txt-slider{\r\n                h3{\r\n                    width: 55%;\r\n                    font-size: clamp(1rem, 5vw, 8rem);\r\n                    color: #fff;\r\n                    margin: 0 auto;\r\n\r\n                    span{\r\n                        color: ${props => props.theme.secundary_color};\r\n                    }\r\n                }\r\n                button{\r\n                    outline: none;\r\n                    padding: 5px 20px;\r\n                    font-size: clamp(1rem,2.5vw, 1.5rem);\r\n                    border: none;\r\n                    color: #fff;\r\n                    margin-top: 20px;\r\n                    background: #E32B2B;\r\n                    border-radius: 20px;\r\n\r\n                    &:hover{\r\n                        color: #E32B2B;\r\n                        background: #fff;\r\n                    }\r\n                    }\r\n                }\r\n                \r\n            }\r\n    }\r\n`","import React from 'react'\r\nimport { Container } from \"./SliderElements\"\r\nimport { Carousel } from \"react-bootstrap\"\r\nimport slider1 from \"../../img/slider1.jpeg\"\r\nimport slider2 from \"../../img/slider2.jpeg\"\r\nimport slider from \"../../img/slider.jpeg\"\r\nimport slider3 from \"../../img/slider3.jpeg\"\r\n\r\n\r\nexport const Slider = () => {\r\n    return (\r\n        <Container>\r\n\r\n            <Carousel className=\"slider\">\r\n\r\n                <Carousel.Item interval={2000} style={{ maxWidth: \"100vw\", maxHeight: \"100vh\" }} className=\"itemSlider\">\r\n                    <div className=\"item\">\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={slider}\r\n                            alt=\"First slide\"\r\n                            style={{ maxWidth: \"100vw\", minHeight: \"100vh\", objectFit: \"cover\" }}\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption style={{ top: \"50%\", transform: \"translateY(-50%)\", bottom: \"initial\" }}>\r\n                        <div className=\"info-txt-slider\">\r\n                            <h3>Sua coleção pessoal</h3>\r\n                            <button>Upload imagem</button>\r\n                        </div>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n\r\n\r\n                <Carousel.Item interval={2000} style={{ maxWidth: \"100vw\", maxHeight: \"100vh\" }} className=\"itemSlider\">\r\n                    <div className=\"item\">\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={slider1}\r\n                            alt=\"First slide\"\r\n                            style={{ maxWidth: \"100vw\", minHeight: \"100vh\", objectFit: \"cover\" }}\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption style={{ top: \"50%\", transform: \"translateY(-50%)\", bottom: \"initial\" }}>\r\n                        <div className=\"info-txt-slider\">\r\n                            <h3>Armazene suas fotos na nuvem</h3>\r\n                            <button>Upload imagem</button>\r\n                        </div>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n\r\n\r\n\r\n                <Carousel.Item interval={2000} style={{ maxWidth: \"100vw\", maxHeight: \"100vh\" }} className=\"itemSlider\">\r\n                    <div className=\"item\">\r\n                        <img\r\n                            className=\"d-block w-100\"\r\n                            src={slider3}\r\n                            alt=\"First slide\"\r\n                            style={{ maxWidth: \"100vw\", minHeight: \"100vh\", objectFit: \"cover\" }}\r\n                        />\r\n                    </div>\r\n                    <Carousel.Caption style={{ top: \"50%\", transform: \"translateY(-50%)\", bottom: \"initial\" }}>\r\n                        <div className=\"info-txt-slider\">\r\n                            <h3>Sua Melhor Foto</h3>\r\n                            <button>Upload imagem</button>\r\n                        </div>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n            </Carousel>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Modal = ({selectedImage, SetSelectedImage}) => {\r\n\r\n    const handleClick = (e) =>{\r\n\r\n        if(e.target.classList.contains('backdrop')){\r\n            SetSelectedImage(null)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={handleClick}>\r\n            <img src={selectedImage} alt=\"Imagem Grande\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\nimport { GridImage } from './comps/GridImage';\nimport Title from './comps/Title';\nimport { UploadForm } from './comps/UploadForm';\nimport { Slider } from \"./comps/Slider/Index\"\nimport { Modal } from './comps/Modal';\n\nfunction App() {\n  const [selectedImage, SetSelectedImage] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <Slider />\n      <UploadForm />\n      <GridImage SetSelectedImage={ SetSelectedImage}/>\n      {selectedImage && <Modal selectedImage={selectedImage} SetSelectedImage={SetSelectedImage}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}